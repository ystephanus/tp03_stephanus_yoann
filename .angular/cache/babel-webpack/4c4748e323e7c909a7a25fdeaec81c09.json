{"ast":null,"code":"import { from, interval, of } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction AppComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", c_r1.libelle, \" - \", c_r1.price, \" euros \");\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(service) {\n      this.service = service;\n      this.title = 'tp3';\n      this.myObservable = of('TODO');\n      this.myObservable2 = from(['titi', 'toto', 'tutu']);\n      this.myObservable3 = interval(2000);\n      this.client = this.service.getClient();\n    }\n\n    ngOnInit() {\n      this.subscribe = this.myObservable3.pipe(filter(v => v % 2 == 0)).subscribe(value => this.valeur = value);\n      this.catalogues = this.service.getCatalogue();\n    }\n\n    ngOnDestroy() {\n      this.subscribe.unsubscribe();\n    }\n\n    valuechange(event) {\n      console.log(event);\n      this.catalogues = this.service.getCatalogue().pipe(map(articles => articles.filter(article => article.libelle.startsWith(this.recherche))));\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 13,\n    vars: 11,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Bienvenue dans le TP3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"label\");\n        i0.ɵɵtext(7, \"Recherche\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.recherche = $event;\n        })(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.valuechange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"ul\");\n        i0.ɵɵtemplate(11, AppComponent_li_11_Template, 2, 2, \"li\", 1);\n        i0.ɵɵpipe(12, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate3(\"\\n\", ctx.client, \" \", i0.ɵɵpipeBind1(3, 5, ctx.myObservable), \"\\n\", i0.ɵɵpipeBind1(4, 7, ctx.myObservable2), \"\\n\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.recherche);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 9, ctx.catalogues));\n      }\n    },\n    directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf],\n    pipes: [i3.AsyncPipe],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}